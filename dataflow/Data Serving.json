{
	"name": "Data Serving",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "datalakekhan",
						"type": "LinkedServiceReference"
					},
					"name": "Airlines"
				},
				{
					"linkedService": {
						"referenceName": "datalakekhan",
						"type": "LinkedServiceReference"
					},
					"name": "Booking"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Top5Airlines",
						"type": "DatasetReference"
					},
					"name": "SinkView1"
				}
			],
			"transformations": [
				{
					"name": "JoinAirline"
				},
				{
					"name": "SelectCols"
				},
				{
					"name": "AggrAirlineSales"
				},
				{
					"name": "AirlineSalesRank"
				},
				{
					"name": "FilterTop5"
				},
				{
					"name": "InsertTop5"
				}
			],
			"scriptLines": [
				"source(output(",
				"          airline_id as short,",
				"          airline_name as string,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: 'silver',",
				"     folderPath: 'DimAirline') ~> Airlines",
				"source(output(",
				"          booking_id as integer,",
				"          passenger_id as integer,",
				"          flight_id as integer,",
				"          airline_id as integer,",
				"          origin_airport_id as integer,",
				"          destination_airport_id as integer,",
				"          booking_date as date,",
				"          ticket_cost as decimal(10,2),",
				"          flight_duration_mins as integer,",
				"          checkin_status as string,",
				"          flight_duration_hours as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: 'silver',",
				"     folderPath: 'FactBooking') ~> Booking",
				"Booking, Airlines join(Booking@airline_id == Airlines@airline_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinAirline",
				"JoinAirline select(mapColumn(",
				"          booking_id,",
				"          passenger_id,",
				"          flight_id,",
				"          airline_id = Booking@airline_id,",
				"          origin_airport_id,",
				"          destination_airport_id,",
				"          booking_date,",
				"          ticket_cost,",
				"          flight_duration_mins,",
				"          checkin_status,",
				"          flight_duration_hours,",
				"          airline_name,",
				"          country",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCols",
				"SelectCols aggregate(groupBy(airline_name,",
				"          country),",
				"     total_sales = sum(ticket_cost)) ~> AggrAirlineSales",
				"AggrAirlineSales window(desc(total_sales, true),",
				"     Rank = denseRank()) ~> AirlineSalesRank",
				"AirlineSalesRank filter(Rank < 6) ~> FilterTop5",
				"FilterTop5 alterRow(insertIf(1>0)) ~> InsertTop5",
				"InsertTop5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkView1"
			]
		}
	}
}
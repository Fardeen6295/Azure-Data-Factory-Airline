{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfcourseV2khan"
		},
		"airport_sql_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'airport_sql_db'"
		},
		"datalakekhan_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'datalakekhan'"
		},
		"on_prem_files_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'on_prem_files'"
		},
		"airport_sql_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "airportdbadfv2.database.windows.net"
		},
		"airport_sql_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "airportdbV2"
		},
		"airport_sql_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminkhan"
		},
		"datalakekhan_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakekhan.dfs.core.windows.net/"
		},
		"ls_git_csvs_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"on_prem_files_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\ADFCourseFiles"
		},
		"on_prem_files_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "fardeenkhanbieng@gmail.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/airport_sql_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('airport_sql_db_properties_typeProperties_server')]",
					"database": "[parameters('airport_sql_db_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('airport_sql_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('airport_sql_db_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalakekhan')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('datalakekhan_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('datalakekhan_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_git_csvs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_git_csvs_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/khan-selfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Airlinecsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DimAirline.csv",
						"folderPath": "csv_files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirportJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DimAirport.json",
						"folderPath": "git_files",
						"fileSystem": "bronze"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bookingparq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sql",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Flightcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DimFlight.csv",
						"folderPath": "csv_files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetGitFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_git_csvs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "Fardeen6295/Retail_Chain_Store_Data_Insights/refs/heads/main/DimAirport.json"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_git_csvs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Passengercsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DimPassenger.csv",
						"folderPath": "csv_files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaveGitFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DimAirport.json",
						"folderPath": "git_files",
						"fileSystem": "bronze"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Saveonpremfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "csv_files",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Top5Airlines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Top5Airlines.csv",
						"folderPath": "business_views",
						"fileSystem": "gold"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fact_booking')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "airport_sql_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/airport_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_save_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "sql",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empty_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "empty.json",
						"folderPath": "monitor",
						"fileSystem": "bronze"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/last_cdc_value')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakekhan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cdc.json",
						"folderPath": "monitor",
						"fileSystem": "bronze"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakekhan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/on_prem_files')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('on_prem_files_properties_typeProperties_host')]",
					"userId": "[parameters('on_prem_files_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('on_prem_files_password')]"
					}
				},
				"connectVia": {
					"referenceName": "khan-selfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/khan-selfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetGitCSVs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGit",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://raw.githubusercontent.com/Fardeen6295/Retail_Chain_Store_Data_Insights/refs/heads/main/DimAirport.json"
						}
					},
					{
						"name": "CopyGitData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 45,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['airport_id']"
										},
										"sink": {
											"path": "$['airport_id']"
										}
									},
									{
										"source": {
											"path": "$['airport_name']"
										},
										"sink": {
											"path": "$['airport_name']"
										}
									},
									{
										"source": {
											"path": "$['city']"
										},
										"sink": {
											"path": "$['city']"
										}
									},
									{
										"source": {
											"path": "$['country']"
										},
										"sink": {
											"path": "$['country']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "GetGitFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SaveGitFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-27T10:34:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetGitFile')]",
				"[concat(variables('factoryId'), '/datasets/SaveGitFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqltodatalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MaxDateinfact",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(booking_date) as latest_cdc FROM dbo.factbookings",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_fact_booking",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "last_cdc",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "last_cdc_value",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copysqltoparquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "last_cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MaxDateinfact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "current",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM dbo.factbookings WHERE booking_date > '@{activity('last_cdc').output.firstRow.cdc}' AND booking_date <= '@{activity('MaxDateinfact').output.firstRow.latest_cdc}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_fact_booking",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_save_parquet",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": {
										"value": "@{concat('factbooking- ', variables('current'))}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "If New Data",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Copysqltoparquet",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Copysqltoparquet').output.dataRead, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Deleteemptyfile",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_save_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": "@{concat('factbooking- ', variables('current'))}"
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "update_last_cdc",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc",
													"value": {
														"value": "@activity('MaxDateinfact').output.firstRow.latest_cdc",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "empty_json",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "last_cdc_value",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "current",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "current",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"current": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-27T18:32:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_fact_booking')]",
				"[concat(variables('factoryId'), '/datasets/last_cdc_value')]",
				"[concat(variables('factoryId'), '/datasets/ds_save_parquet')]",
				"[concat(variables('factoryId'), '/datasets/empty_json')]"
			]
		}
	]
}